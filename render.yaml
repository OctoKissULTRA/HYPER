services:
  - type: web
    name: hyper-trading-system
    env: python
    plan: starter
    region: oregon
    buildCommand: pip install -r requirements.txt
    startCommand: python main.py
    healthCheckPath: /health
    autoDeploy: true
    envVars:
      - key: ENVIRONMENT
        value: production
      - key: DEMO_MODE
        value: "false"
      - key: LOG_LEVEL
        value: INFO
      
      # ============================================
      # ROBINHOOD CREDENTIALS (Optional)
      # ============================================
      # Add your Robinhood credentials for real data
      # If not provided, system uses dynamic simulation
      - key: RH_USERNAME
        value: ""  # Add your Robinhood username here
      - key: RH_PASSWORD
        value: ""  # Add your Robinhood password here
      
      # ============================================
      # OPTIONAL API KEYS (Future Features)
      # ============================================
      - key: NEWS_API_KEY
        value: ""
      - key: REDDIT_CLIENT_ID
        value: ""
      - key: REDDIT_SECRET
        value: ""
      - key: TWITTER_BEARER_TOKEN
        value: ""
      
      # ============================================
      # ALPHA VANTAGE COMPLETELY REMOVED
      # ============================================
      # ❌ ALPHA_VANTAGE_API_KEY - No longer needed!
      
    disk:
      name: hyper-data
      mountPath: /app/data
      sizeGB: 1

# ============================================
# DEPLOYMENT NOTES
# ============================================

# ROBINHOOD CREDENTIALS:
# - If you add RH_USERNAME and RH_PASSWORD, system will use real Robinhood data
# - If you leave them empty, system uses dynamic market simulation
# - Both options provide excellent ML training data

# SYSTEM BENEFITS:
# ✅ Works immediately without any credentials
# ✅ Perfect for ML training with dynamic simulation
# ✅ Add real data later by providing Robinhood credentials
# ✅ Zero external API dependencies required
# ✅ Faster deployment without Alpha Vantage rate limits

# HEALTH CHECK:
# - /health endpoint provides comprehensive system status
# - Shows data source status (Robinhood vs simulation)
# - Validates all system components

# PERFORMANCE:
# - Dynamic simulation is faster than API calls
# - No rate limiting issues
# - Consistent data availability
# - Perfect for development and production
